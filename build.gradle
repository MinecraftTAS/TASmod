plugins {
	// loom plugin
    id 'fabric-loom' version "${loom_version}"
    // legacy looming (loom plugin improvements)
    id 'legacy-looming' version "${loom_version}"
}


// set basic properties
version = project.version
group = project.group

// compile for java 8
sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

<<<<<<< HEAD
// set access widener
loom.accessWidenerPath = file('src/main/resources/tasmod.accesswidener')
=======
loom {
	accessWidenerPath = file('src/main/resources/tasmod.accesswidener')
	log4jConfigs.from(file('src/main/resources/log4j.xml'))
	
	mixin {
		defaultRefmapName = "tasmod.refmap.json"
	}
}
>>>>>>> 7f37d08 (Added custom log4j config)

// dependency repositories
repositories {
    mavenCentral()
    maven { url = 'https://raw.githubusercontent.com/BleachDev/cursed-mappings/main/' }
    maven { url = "https://jitpack.io" }
    maven { url = "https://maven.mgnet.work/main" }
    maven { url = 'https://repo.spongepowered.org/maven' }
}

// dependency configurations
configurations {
	// non-transitive download mod dependency
    downloadMod.transitive = false
    // embed dependency included in build
    implementation.extendsFrom(embed)
}

// dependencies
dependencies {
    // tasmod dependencies
    embed group: 'com.dselent', name: 'bigarraylist', version: '1.0'
    compileOnly group: 'com.minecrafttas', name: 'killtherng', version: '2.0'
    downloadMod group: 'com.minecrafttas', name: 'killtherng-full', version: '2.0' // for downloadKTRNG task

	// loom dependencies
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.legacyfabric:yarn:${project.minecraft_version}+build.mcp"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.3'
}

// task for downloading KillTheRng
task downloadKTRNG(type: Copy) {
	group 'tasmod'
	description 'Download KillTheRNG to the run/mods/ folder of the project'
    from configurations.downloadMod
    into 'run/mods/'
}

// process fabric mod json
processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft_version

    filesMatching("fabric.mod.json") {
        expand 'mod_url': project.mod_url, 'name': project.mod_name, 'mod_version': project.version, 'mod_description': project.mod_description, 'mod_sources': project.mod_sources, 'mod_email': project.mod_email
    }
}

// configure jar file
jar {
	archivesBaseName = project.artifact

	// pack embedded stuff
	from {
		configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "LICENSE.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
    }
}

// configure testing
tasks.named('test', Test) {
    useJUnitPlatform()

	testLogging {
		events "passed", "skipped", "failed"
	}
}
